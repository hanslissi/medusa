{{#ifdef description deprecated}}
/**
{{#if description}}
 * {{{escapeComment description}}}
{{/if}}
{{#if deprecated}}
 * @deprecated
{{/if}}
 */
{{/ifdef}}
export interface {{{name}}} {
	{{#each properties}}
	{{#ifdef description deprecated}}
	/**
	{{#if description}}
	 * {{{escapeComment description}}}
	{{/if}}
	{{#if deprecated}}
	 * @deprecated
	{{/if}}
	 */
	{{/ifdef}}
  {{~#if extensions}}
    {{~#if extensions.relations}}
      {{>isReadOnly}}{{{name}}}{{>isRequired}}: {{>typeWithRelation relations=extensions.relations deepRelations=extensions.deepRelations}}
    {{/if}}
  {{/if}}
  {{~#unless extensions}}
	  {{>isReadOnly}}{{{name}}}{{>isRequired}}: {{>type parent=../name}};
  {{~/unless}}
	{{/each}}
};

{{#if enums}}
{{#unless @root.useUnionTypes}}

export namespace {{{name}}} {

	{{#each enums}}
	{{#if description}}
	/**
	 * {{{escapeComment description}}}
	 */
	{{/if}}
	export enum {{{name}}} {
		{{#each enum}}
		{{{name}}} = {{{value}}},
		{{/each}}
	}

	{{/each}}

}
{{/unless}}
{{/if}}
